{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["ContactForm","inputId","nanoid","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","htmlFor","loginInputId","onChange","id","type","pattern","title","required","Component","ContactList","console","log","contacts","map","Filter","Phonebook","filter","addSubmitData","contact","changeFilter","getFilterSearch","normalizedFilter","toLowerCase","includes","filterSearch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9cf94bf2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"../ContactForm/ContactForm.css\";\n// import Input from \"../Input/Input\";\nimport { nanoid } from \"nanoid\";\n\nexport default class ContactForm extends Component {\n  inputId = nanoid();\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    // console.log({ name, value });\n    this.setState({ [name]: value });\n    // console.log(this.state);\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className=\"form\" onSubmit={this.handleSubmit}>\n        <label className=\"label\" htmlFor={this.loginInputId}>\n          Name\n          <input\n            className=\"input\"\n            value={name}\n            onChange={this.handleChange}\n            id={this.inputId}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className=\"label\" htmlFor={this.loginInputId}>\n          Number\n          <input\n            className=\"input\"\n            value={number}\n            onChange={this.handleChange}\n            id={this.inputId}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className=\"btn\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class ContactList extends Component {\n  render() {\n    console.log(this.props.contacts);\n    return (\n      <ul className=\"contact__list\">\n        {this.props.contacts.map(({ id, name, number }) => (\n          <li key={id}>\n            {name}: {number}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"../Filter/Filter.css\";\nexport default class Filter extends Component {\n  render() {\n    return (\n      <label className=\"label\">\n        Find contacts by name\n        <input\n          className=\"input\"\n          value={this.props.value}\n          onChange={this.props.onChange}\n          type=\"text\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport \"./App.css\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nclass Phonebook extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addSubmitData = ({ name, number }) => {\n    console.log({ name, number });\n    const contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, contact],\n    }));\n  };\n  changeFilter = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n  getFilterSearch = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filterSearch = this.getFilterSearch();\n    return (\n      <div>\n        <h1 className=\"title\">Phonebook</h1>\n        <ContactForm onSubmit={this.addSubmitData} />\n        <h2 className=\"title\">Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList contacts={filterSearch} />\n      </div>\n    );\n  }\n}\n\nexport default Phonebook;\n// {/* <div>\n//   <h1>Phonebook</h1>\n//   <ContactForm ... />\n\n//   <h2>Contacts</h2>\n//   <Filter ... />\n//   <ContactList ... />\n// </div> */}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}